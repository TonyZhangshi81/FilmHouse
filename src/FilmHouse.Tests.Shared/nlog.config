<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      throwConfigExceptions="true"
      internalLogFile="${basedir}/Logs/internal-nlog-AspNetCore.txt">

    <!-- 用变量layoutDefine定义日志的输出布局 -->
    <variable name="layoutDefineInfo"
			  value="${longdate} [${event-properties:item=EventId_Id:whenEmpty=0}][${level:padding=-5}] ${message} (${callsite:includeNamespace=true:fileName=true:includeSourcePath=false})" />
    <variable name="layoutDefineError"
			  value="${longdate} ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace}" />

    <!-- 写入目标 -->
    <targets>
        <!-- 写在Visual Studio的输出(调试)中。 -->
        <target xsi:type="Trace" name="TraceOutput" rawWrite="true" layout="${layoutDefineInfo}" />

        <!-- 包含基本细节的所有日志消息输出到文件 -->
        <target xsi:type="File" name="DefaultOutput" fileName="${basedir}/Logs/Log-${shortdate}.log" layout="${layoutDefineInfo}" />
        <target xsi:type="File" name="ErrorOutput" fileName="${basedir}/Logs/Err-${shortdate}.log" layout="${layoutDefineError}" />

        <!-- 目标托管消息以控制台方式输出，以改进Docker/Visual Studio的启动检测 -->
        <target xsi:type="Console" name="LifetimeConsole" layout="${level:truncate=4}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
    </targets>

    <!-- 从日志名向目标映射的规则 -->
    <rules>
        <!-- 所有日志 -->
        <logger name="*" writeTo="TraceOutput" />

        <!-- 为了加速启动检测，向控制台目标输出主机消息。（Microsoft.Hosting.Lifetime的Info以上级别会输出） -->
        <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="LifetimeConsole" final="true" />

        <!-- 跳过不重要的Microsoft日志，只记录自己的日志。除了系统发出的Warning以上的日志以外，不会输出到下面的定义。-->
        <logger name="Microsoft.*" maxlevel="Info" final="true" />
        <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

        <!-- 将排除上述对象以外的信息输出到文件 -->
        <logger name="*" maxlevel="Warn" writeTo="DefaultOutput" />
        <logger name="*" minlevel="Error" writeTo="ErrorOutput" />
    </rules>
</nlog>